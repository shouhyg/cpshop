<?php
/**
 * 角色组管理文件
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2019/11/20 0020
 * Time: 17:08
 */
namespace app\admin\controller\auth;
use app\common\controller\Backend;
use fast\Tree;
use think\Db;
use think\helper;
class Group extends Backend
{
    // app\common\model\authGroup
    protected $model = null;
    //当前管理员的所有子组别
    protected $childrenGroupIds = [];
    //无需要权限验证的方法
    protected $noNeedRight = [];
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->model =model('AuthGroup');
        new \app\admin\library\Auth();
        //获取当前用户的所属的所有的用户组
        $this->childrenGroupIds = $this->auth->getChildrenGroupIds();
//        echo 99;
//        print_r($this->childrenGroupIds);
        //获取用户组列表
        $groupLists = Db::name('auth_group')->where('id', 'in', $this->childrenGroupIds)->select();
        Tree::instance()->init($groupLists);
        $result = [];
        if ($this->auth->isSuperAdmin()) {
            //超级管理员
            $result = Tree::instance()->getTreeList(Tree::instance()->getTreeArray(0));
        } else {
            $groups = $this->auth->getGroups();
            foreach ($groups as $m=>$n) {
                $result = array_merge($result, Tree::instance()->getTreeList(Tree::instance()->getTreeArray($n['pid'])));
            }
        }
        $groupName = [];
        foreach ($result as $k=>$v) {
            $groupName[$v['id']] = $v['name'];
        }
        $this->groupdata = $groupName;
        //赋值 构成下拉的列表的内容
        $this->assign('groupdata',$this->groupdata);
      //  $this->assignconfig('admin', ['id'=>$this->auth->id, 'group_ids'=>$this->auth->getGroupIds()]);
    }

    /**
     * 角色组列表
     * @return \think\response\Json|void
     */
    public function index()
    {
        return $this->fetch();
    }

    /**
     * 添加角色组
     */
    public function add()
    {
        //获取当前登录的用户所拥有的的所有的权限规则
        $rules = $this->auth->getMyRules();
        print_r($rules);
        return $this->fetch();
    }

}